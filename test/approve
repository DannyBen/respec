#!/usr/bin/env bash
# Run this from the root directory

# Setup
cd ./test || exit
source test_helper.bash

# Tests
describe "respec"
  approve "$cli --help"
  approve "$cli"

describe "respec all"
  approve "$cli all --help"
  approve "$cli all"
  approve "$cli all --watch"
  approve "echo q | $cli all --repeat"

describe "respec focus"
  approve "$cli focus --help"
  approve "$cli focus"
  approve "$cli all --watch"
  approve "echo q | $cli all --repeat"

describe "respec fails"
  approve "$cli fails --help"
  context "when there is no spec_helper"
    approve "$cli fails" "error_no_helper"

  context "when spec_helper exists but misconfigured"
    set_bad_helper
    approve "$cli fails" "error_misconfigured_helper"
    unset_helper

  context "with a properly configured environment"
    set_good_helper
    approve "$cli fails"
    approve "$cli fails --watch"
    approve "echo q | $cli fails --repeat"
    unset_helper

describe "respec only"
  approve "$cli only --help"
  approve "$cli only"

  context "with a properly configured environment"
    set_good_helper
    approve "$cli only conf"
    approve "$cli only conf --watch"
    approve "$cli only no-such-files"
    approve "echo q | $cli only conf --repeat"
    unset_helper

describe "respec except"
  approve "$cli except --help"
  approve "$cli except"

  context "with a properly configured environment"
    set_good_helper
    approve "$cli except con"
    approve "$cli except con --watch"
    approve "echo q | $cli except con --repeat"
    [[ -z $CI ]] && approve "$cli except no-such-file" "respec_except_no_such_file"
    # sort since the output is different in CI
    # this is a repeat of the previous test
    approve "$cli except no-such-file | xargs -n1 | sort | xargs" "respec_except_no_such_file_ci"
    unset_helper

describe "respec last"
  approve "$cli last --help"

  context "with a properly configured environment"
    set_good_helper
    approve "$cli last 1 --watch"
    approve "echo q | $cli last 1 --repeat"
    unset_helper

  context "when there are no specs recently modified"
    # this touch does not work on vagrant, it is here for CI only
    touch -d "2 hours ago" fixtures/spec/*.rb
    approve "$cli last 1" "respec_last_no_changes"
    approve "$cli last 1" "respec_last_no_changes"

  context "when there are specs recently modified"
    touch "fixtures/spec/modified_spec.rb"
    approve "$cli last" "respec_last_changes"
    rm -f "fixtures/spec/modified_spec.rb"

describe "respec refactor"
  approve "$cli refactor --help"
  approve "$cli refactor"

describe "respec continue"
  approve "$cli continue --help"
  context "when there is no spec_helper"
    approve "$cli continue" "error_no_helper"

  context "when spec_helper exists but misconfigured"
    set_bad_helper
    approve "$cli continue" "error_misconfigured_helper"
    unset_helper

  context "with a properly configured environment"
    set_good_helper
    approve "$cli continue"
    approve "$cli continue --watch"
    approve "echo q | $cli continue --repeat"
    unset_helper

describe "respec reset"
  approve "$cli reset --help"
  context "when there is no spec_helper"
    approve "$cli reset" "error_no_helper"

  context "when spec_helper exists but misconfigured"
    set_bad_helper
    approve "$cli reset" "error_misconfigured_helper"
    unset_helper

  context "with a properly configured environment"
    set_good_helper
    touch "fixtures/spec/status.txt"
    approve "$cli reset"
    if [[ -f "fixtures/spec/status.txt" ]]; then
      fail "expected fixtures/spec/status.txt to be gone"
    fi
    unset_helper

