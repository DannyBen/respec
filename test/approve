#!/usr/bin/env bash
# Run this from the root directory

# Setup
cd ./test || exit
source approvals.bash
PATH="$PATH:../"
cli=respec

# Stub commands to avoid actually executing it
export RESPEC_RSPEC_COMMAND='echo [stubbed] $ rspec'
export RESPEC_FILEWATCHER_COMMAND='echo [stubbed] $ filewatcher'
unset RESPEC_HELPER_PATH
unset RESPEC_STATUS_FILE

# Delete the spec directory if it exists (it is generated by one of the tests)
rm -rf spec

# Tests
context "when there are no special environment requirements"
  describe "root command"
    approve "$cli --help"
    approve "$cli" || 0

  describe "all"
    approve "$cli all"
    approve "$cli all --help"

  describe "focus"
    approve "$cli focus"
    approve "$cli focus --help"
  
  describe "errors"
    approve "$cli errors --help"

  describe "only"
    approve "$cli only --help"
    approve "$cli only" || 0

  describe "except"
    approve "$cli except --help"
    approve "$cli except" || 0

  describe "last"
    approve "$cli last --help"

  describe "continue"
    approve "$cli continue --help"

  describe "reset"
    approve "$cli reset --help"

  describe "watch"
    approve "$cli watch --help"
    approve "$cli watch"


context "when there is no spec_helper"
  describe "errors"
    approve "$cli errors" "error_no_helper" || 0

  describe "continue"
    approve "$cli continue" "error_no_helper" || 0

  describe "reset"
    approve "$cli reset" "error_no_helper" || 0


context "when spec_helper exists but misconfigured"
  export RESPEC_HELPER_PATH="fixtures/misconfigured_spec_helper.rb"
  export RESPEC_STATUS_FILE="fixtures/spec/status.txt"

  describe "errors"
    approve "$cli errors" "error_misconfigured_helper" || 0

  describe "continue"
    approve "$cli continue" "error_misconfigured_helper" || 0

  describe "reset"
    approve "$cli reset" "error_misconfigured_helper" || 0


context "with a properly configured environment"
  export RESPEC_HELPER_PATH="fixtures/spec_helper.rb"
  export RESPEC_STATUS_FILE="fixtures/spec/status.txt"

  describe "errors"
    approve "$cli errors"

  describe "continue"
    approve "$cli continue"

  describe "reset"
    touch "fixtures/spec/status.txt"
    approve "$cli reset"
    if [[ -f "fixtures/spec/status.txt" ]]; then
      fail "expected fixtures/spec/status.txt to be gone"
    fi

  describe "only"
    approve "$cli only con"
    approve "$cli only no-such-files"

  describe "except"
    approve "$cli except con"
    # sort since the output is different in CI
    approve "$cli except no-such-file | xargs -n1 | sort | xargs" "respec_except_no_such_file"

context "when there are no specs recently modified"
  describe "last"
    approve "$cli last 0" "respec_last_no_changes"

context "when there are specs recently modified"
  touch "fixtures/spec/modified_spec.rb"
  describe "last"
    approve "$cli last" "respec_last_changes"
  rm -f "fixtures/spec/modified_spec.rb"
